{"version":3,"sources":["components/Notification.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Filter.js","services/persons.js","App.js","index.js"],"names":["Notification","props","classNames","type","push","message","className","join","PersonForm","onSubmit","fields","map","field","key","label","value","onChange","Person","name","number","onClick","onDelete","style","marginLeft","Persons","persons","person","id","onPersonRemoveClick","Filter","axios","get","then","response","data","post","put","delete","status","findPersonById","find","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filterValue","setFilterValue","text","setMessage","useEffect","personService","initialPersons","catch","error","console","resetForm","handleAddErrorResponse","errors","errorStrings","Object","keys","string","i","timeoutMessageClear","timeout","setTimeout","triggerErrorNotification","filter","p","formFields","e","target","shownPersons","toLowerCase","includes","preventDefault","existingPerson","newPerson","findPersonByName","window","confirm","personForUpdate","updatedPerson","updatedPersons","updatePerson","concat","addPerson","removePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6599fa9.chunk.js","sourcesContent":["import React from 'react'\n\nconst Notification = props => {\n    const classNames = ['notification'];\n    if (props.type) {\n        classNames.push(props.type);\n    }\n\n    return props.message && (\n        <div className={classNames.join(' ')}>\n            {props.message}\n        </div>\n    );\n};\n\nexport default Notification;\n","import React from 'react'\n\n\nconst PersonForm = props => {\n    return (\n        <form onSubmit={props.onSubmit}>\n            {props.fields.map(field => (\n                <div key={field.label}>\n                    {field.label}: <input value={field.value} onChange={field.onChange} />\n                </div>\n            ))}\n            <div>\n                <button type=\"submit\">\n                    add\n                </button>\n            </div>\n        </form>\n    );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\n\nconst Person = props => {\n    return (\n        <div>\n            {props.name} {props.number}\n            <button\n                onClick={props.onDelete}\n                style={{ marginLeft: 4 }}\n            >\n                delete\n            </button>\n        </div>\n    );\n};\n\n\nexport default Person;","import React from 'react';\nimport Person from './Person';\n\n\nconst Persons = props => {\n    return (\n        <div>\n            {props.persons.map(person => (\n                <Person\n                    {...person}\n                    key={person.id}\n                    onDelete={() => props.onPersonRemoveClick(person)}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default Persons;\n","import React from 'react';\n\n\nconst Filter = props => {\n    return (\n        <div>\n            filter shown with <input value={props.value} onChange={props.onChange} />\n        </div>\n    );\n};\n\nexport default Filter;\n","import axios from \"axios\";\n\n\nconst BASE_URL = '/api/persons';\n\nconst getAll = () =>\n    axios\n        .get(BASE_URL)\n        .then(response => response.data);\n\nconst create = person =>\n    axios\n        .post(BASE_URL, person)\n        .then(response => response.data);\n\nconst update = (id, person) =>\n    axios\n        .put(`${BASE_URL}/${id}`, person)\n        .then(response => response.data);\n\nconst remove = id =>\n    axios\n        .delete(`${BASE_URL}/${id}`)\n        .then(response => response.status);\n\nexport default {\n    getAll,\n    create,\n    update,\n    remove\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport Notification from './components/Notification';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\n\nimport personService from './services/persons';\n\n\nconst findPersonByName = (persons, newPerson) =>\n    persons.find(person => (\n        person.name.toLowerCase() === newPerson.name.toLowerCase()\n    ));\n\nconst findPersonById = (persons, id) =>\n    persons.find(person => person.id === id);\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [filterValue, setFilterValue] = useState('');\n    const [message, setMessage] = useState({ text: '', type: '' });\n\n    const fetchPersons = () => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons);\n            })\n            .catch(error => {\n                console.error('Fetching all persons failed')\n            });\n    };\n\n    useEffect(() => {\n        fetchPersons();\n    }, []);\n\n    const handleFilterChange = e => {\n        setFilterValue(e.target.value);\n    };\n\n    const resetForm = () => {\n        setNewName('');\n        setNewNumber('');\n    };\n\n    const handleAddErrorResponse = error => {\n        const { errors } = error.response.data;\n        const errorStrings = Object.keys(errors).map(key => `${key}: ${errors[key]}`);\n        setMessage({\n            text: (\n                <div>\n                    Error:\n                    {errorStrings.map((string, i) => (\n                        <div key={i}>{string}</div>\n                    ))}\n                </div>\n            ),\n            type: 'error'\n        });\n        timeoutMessageClear();\n    };\n\n    const addPerson = person => {\n        personService\n            .create(person)\n            .then(newPerson => {\n                setPersons(persons.concat(newPerson));\n                resetForm();\n                setMessage({\n                    text: `Added ${newPerson.name}`,\n                    type: 'success'\n                });\n\n                setTimeout(() => {\n                    setMessage({ text: '', type: '' });\n                }, 5000);\n            })\n            .catch(handleAddErrorResponse);\n    };\n\n    const timeoutMessageClear = (timeout = 5000) => {\n        setTimeout(() => {\n            setMessage({ text: '', type: '' });\n        }, timeout);\n    };\n\n    const triggerErrorNotification = (person) => {\n        setMessage({\n            text: `Information of ${person.name} has already been removed from server`,\n            type: 'error'\n        });\n        setPersons(persons.filter(p => p.id !== person.id));\n        timeoutMessageClear();\n    };\n\n    const removePerson = id => {\n        const person = findPersonById(persons, id);\n        personService\n            .remove(id)\n            .then(() => {\n                setPersons(persons.filter(person => person.id !== id));\n                setMessage({\n                    text: `${person.name} has been removed succesfully`,\n                    type: 'success'\n                });\n                timeoutMessageClear();\n            })\n            .catch(() => {\n                triggerErrorNotification(person);\n            });\n    };\n\n    const updatePerson = personForUpdate => {\n        const { id } = personForUpdate;\n        personService\n            .update(id, personForUpdate)\n            .then(updatedPerson => {\n                const updatedPersons = persons.map(person =>\n                    person.id === updatedPerson.id\n                        ? updatedPerson\n                        : person\n                );\n                setPersons(updatedPersons);\n                resetForm();\n            })\n            .catch(() => {\n                const person = findPersonById(persons, id);\n                triggerErrorNotification(person);\n            });\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const person = {\n            name: newName,\n            number: newNumber\n        };\n        const existingPerson = findPersonByName(persons, person);\n        if (existingPerson) {\n            const confirmed = window.confirm(\n                `${newName} is already added to phonebook, replace the old number with a new one?`\n            );\n            if (confirmed) {\n                const personForUpdate = {\n                    ...existingPerson,\n                    number: newNumber\n                };\n                updatePerson(personForUpdate);\n            }\n        } else {\n            addPerson(person);\n        }\n    };\n\n    const handleNewNameChange = e => {\n        setNewName(e.target.value);\n    };\n\n    const handleNewNumberChange = e => {\n        setNewNumber(e.target.value);\n    };\n\n    const onPersonRemoveClick = person => {\n        const confirmed = window.confirm(`Delete ${person.name} ?`);\n        if (confirmed) {\n            removePerson(person.id);\n        }\n    };\n\n    const formFields = [\n        {\n            label: 'name',\n            onChange: handleNewNameChange,\n            value: newName\n        },\n        {\n            label: 'number',\n            onChange: handleNewNumberChange,\n            value: newNumber\n        }\n    ];\n\n    const shownPersons = filterValue\n        ? persons.filter(person => person.name.toLowerCase().includes(filterValue.toLowerCase()))\n        : persons;\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification\n                message={message.text}\n                type={message.type}\n            />\n            <Filter\n                value={filterValue}\n                onChange={handleFilterChange}\n            />\n            <h3>Add a new</h3>\n            <PersonForm\n                onSubmit={handleSubmit}\n                fields={formFields}\n            />\n            <h2>Numbers</h2>\n            <Persons\n                persons={shownPersons}\n                onPersonRemoveClick={onPersonRemoveClick}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}